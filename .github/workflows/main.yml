name: CI-CD-Pipeline-to-AWS-Elastic-Beanstalk

env:
  EB_PACKAGE_S3_BUCKET_NAME: "valerii-flask-application-package"
  EB_APPLICATION_NAME: "Flask-Application-env"
  EB_ENVIRONMENT_NAME: "Flask-Application-env"
  DEPLOY_PACKAGE_NAME: "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME: "us-east-1"

on:
  push:
    branches:
      - master

jobs:
  ci_part:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git clone repo
        uses: actions/checkout@v1

      - name: Create ZIP deployment package
        run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
    
      - name: Copy Deployment Package to S3 Bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name: Complete message
        run: echo "CI Pipeline Finished successfully"
    
  cd_part:
    runs-on: ubuntu-latest
    needs  : [ci_part]

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanstalk Application
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Version-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"

      - name: Deploy new ElasticBEanstalk Application Version
        run : aws elasticbeanstalk update-environment --environment ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Version-${{ github.sha }}"
        
      - name: Complete message
        run : echo "CD Pipeline Finished successfully"
          
      




          
